FORMAT: 1A
HOST: http://staging.techaheadcorp.com/

# FitChirp 

## Settings [/fitchirp/global_settings]

### Get Global Settings [GET]

Global Settings API fetches the global configuration of the mobile app like, application version etc. from the server.

+ Response 200 (application/json)

        {
            "app_version":"1.0",
            "force_update":false
        }

## Authentication [/fitchirp/login]
### Login [POST]

This API is used to log in to the application using standard registered email/password
credentials.

+ Request (application/json)

        {
            "email":"<user-email>",
            "password":"<user-password>",
            "device_id":"<gcm-token>"
        }

+ Response 200 (application/json)

    + Headers

            _fcud : "<unique-authentication-key>"

    + Body

            {
                "status":200,
                "message":"login successful",
                "result":[{
                "user_id":"<user-id>",
                "first_name":"<first-name>",
                "last_name":"<last-name>",
                "email":"<email>",
                "phone":"<phone>",
                "social_id":"<social-id>",
                "login_type":"<0-email, 1-facebook>",
                "city":"<city>",
                "state":"<state>",
                "zip_code":"<zip-code>",
                "posts":123,
                "followers":23,
                "following":34,
                "image":"<user-image-url>",
                "thumb":"<user-image-thumb-url>",
                "referral_code":"<optional-referral-code>"
                "user_type":"0", #0 - individual, 1 - professional
                "basic_profile":{
                    "interests":["<interest-id>", "<interest-id>"],
                    "other_speciality":"<other-speciality>"
                },
                "professional_profile":{
                    "department":"<department-id>",
                    "speciality":
                    [
                        {
                            "id":"<id>",
                            "description":"<description>",
                        },
                        {
                            "id":"<id>",
                            "description":"<description>",
                        }
                    ],
                    "philosophy":"<p-description>",
                    "bio":"<bio-description>",
                    "education":"<edu-description>"
                }
                }]
            }

+ Response 400 (application/json)

    + Headers

            

    + Body

            {
                "status":400,
                "message":"invalid credentials"
            }
            

## Authentication [/fitchirp/social_login]
### Social Login [POST]

+ Request (application/json)

        {
            "social_id":"<unique-social-id>", 
            "device_id":"<device-id>"
        }
        
+ Response 400 (application/json)

    + Headers
    
    + Body
        
            {
                "status":400,
                "message":"User doesn't exist"
            }

+ Response 200 (application/json)

    + Headers
    
            _fcud : "<unique-authentication-key>"
        
    + Body
        
            {
                "status":200,
                "message":"login successful",
                "result":[{
                "user_id":"<user-id>",
                "first_name":"<first-name>",
                "last_name":"<last-name>",
                "email":"<email>",
                "phone":"<phone>",
                "social_id":"<social-id>",
                "login_type":"<0-email, 1-facebook>",
                "city":"<city>",
                "state":"<state>",
                "zip_code":"<zip-code>",
                "posts":123,
                "followers":23,
                "following":34,
                "image":"<user-image-url>",
                "thumb":"<user-image-thumb-url>",
                "referral_code":"<optional-referral-code>"
                "user_type":"0", #0 - individual, 1 - professional
                "basic_profile":{
                    "interests":["<interest-id>", "<interest-id>"],
                    "other_speciality":"<other-speciality>"
                },
                "professional_profile":{
                    "department":"<department-id>",
                    "specialities":
                    [
                        "speciality-1",
                        "speciality-2"
                    ],
                    "philosophy":"<p-description>",
                    "bio":"<bio-description>",
                    "education":"<edu-description>",
                    "website":"<user-website-url>"
                }
                }]
            }

## Social Login [/fitchirp/user/fb_friends/update]
### Update FB Friends [POST]

+ Request (application/json)

        {
            "user_id":"<user-id>", 
            "fb_friends":{
                "current":[
                    "<fb-id-1>",
                    "<fb-id-2>"
                    ],
                "removed":[
                    "fb-id-3"
                    ]
            }
        }
        
+ Response 200 (application/json)

    + Headers
    
    + Body
        
            {
                "status":200,
                "message":"success"
            }

## Signup [/fitchirp/signup]
### Signup [POST]

This API is used to register the user in the application using a valid email/password.

+ Request (application/json)

        {
            "email":"<user-email>",
            "password":"<user-password>",
            "device_id":"<gcm-token>"
        }

+ Response 200 (application/json)

    + Headers
    
            _fcud : "<unique-authentication-key>"
        
    + Body
    
            {
                "status":200,
                "message":"Registration Successfully"
            }
            
+ Response 400 (application/json)

    + Headers
    
            
        
    + Body
    
            {
                "status":400,
                "message":"Email Already in Use"
            }
            
## Forgot Password [/fitchirp/forgot_password]
### Forgot Password [POST]

This API is used to reset the forgotten password. 

+ Request (application/json)

        {
            "email":"<user-email>"
        }
        
+ Response 200 (application/json)

    + Headers
    
            
        
    + Body
    
            {
                "status":200,
                "message":"A link to reset your password has been sent to your email"
            }
            
## Setup Account [/fitchirp/user/profile/basic]
### Setup Account [POST]

This API is used to setup account of the user after registration.

+ Request (application/json)

        {
            "user_id":"<user-id>",
            "image":"<multi-part-image>",
            "first_name":"<first-name>",
            "last_name":"<last-name>",
            "phone":"<phone>",
            "zip":"<zipcode>", 
            "suggest_friends":true
        }

+ Response 200 (application/json)

    + Headers
    
            
        
    + Body
    
            {
                "status":200,
                "message":"Account Setup Compelete"
            }
            
+ Response 400 (application/json)

    + Headers
    
            
        
    + Body
    
            {
                "status":400,
                "message":"Invalid Zip Code"
            }

## Individual Profile [/fitchirp/user/profile/individual/important]
### Complete Individual Profile [POST]

This API is used to update individual profile of the user after registration.

+ Request (application/json)

    + Headers
    
            
            
    + Body

            {
            "user_id":"<user-id>",
            "user_type":"0", #0 - individual, 1 - professional, 
            "self_rating":4,
            "interests":["<interest-id>","<interest-id>"],
            "other_speciality":"<other-speciality>", 
            "prof_recommendations":[
                    "<email-1>",
                    "<email-2>"
            ], 
            }

+ Response 200 (application/json)

    + Headers
    
            
        
    + Body
    
            {
                "status":200,
                "message":"Profile Completed"
            }
            
+ Response 400 (application/json)

    + Headers

            
    
    + Body
    
            {
                "status":400,
                "message":"Invalid User Id/Authentication Key"
            }

## Professional Profile [/fitchirp/user/profile/professional/important]
### Complete Professional Profile [POST]

This API is used to update profile of the professional user after registration.

+ Request (application/json)

    + Headers
    
            
            
    + Body

            {
            "user_id":"<user-id>",
            "referral_code":"<referral-code>",
            "department":"<department-id>",
                "specialities":[
                    
                    "<speciality-1>",
                    "<speciality-2>"
                    
                ],
                "philosophy":"<p-description>",
                "bio":"<bio-description>",
                "education":"<edu-description>",
                "website":"<user-website-url>"
            }

+ Response 200 (application/json)

    + Headers
    
            
        
    + Body
    
            {
                "status":200,
                "message":"Profile Completed"
            }
            
+ Response 400 (application/json)

    + Headers

            
    
    + Body
    
            {
                "status":400,
                "message":"Invalid User Id/Authentication Key"
            }
            
## Common Profile - Final Step [/fitchirp/user/profile/optional]
### Complete Profile - final [POST]

This API is used to update profile of the user after registration.

+ Request (application/json)

    + Headers
    
            _fcud : "<unique-authentication-key>"
            
    + Body

            {
                "user_id":"<user-id>",
                "announce":true,
                "zip_code":"<zip-code>",
                "invitations":[
                    "<email-1>",
                    "<email-2>"
                    ], 
                "interested_in":[
                    "<interest-id-1>",
                    "<interest-id-2>"
                    ]
            }

+ Response 200 (application/json)

    + Headers
    
            
        
    + Body
    
            {
                "status":200,
                "message":"success"
            }
            
+ Response 400 (application/json)

    + Headers

            
    
    + Body
    
            {
                "status":400,
                "message":"Invalid zip code"
            }
            

## Following a User [/fitchirp/user/following]
### Follow/Unfollow User [POST]

This API is used when a user wants to follow/unfollow another user.

+ Request (application/json)

    + Headers
    
            Set-Cookie: _fcud = "<unique-authentication-key>"
            
    + Body

            {
                "user_id":"<user-id>",
                "follow_id":"<follow-user-id>", 
                "follow":true
            }

+ Response 200 (application/json)

    + Headers
    
            
        
    + Body
    
            {
                "status":200,
                "message":"success"
            }

## User Connections [/fitchirp/user/friends/fb/get?{user_id}&{page_no}]
### Get Friends Suggestions [GET]

This API is used to fetch all the facebook friends of the  user and the user who have same interest and same zipcode, who 
are using the app.


+ Response 200 (application/json)

    + Headers
    
            
        
    + Body
    
            {
                "status":200,
                "message":"success"
                "result":[
                    {
                        "count":<total-count>,
                        "page_no":1,
                        "page_size":50,
                        "users":[
                            {
                                "user_id":"<user-id>",
                                "first_name":"<first-name>",
                                "last_name":"<last-name>",
                                "city":"<city>",
                                "state":"<state>",
                                "zip_code":"<zip-code>",
                                "thumb":"<user-image-thumb-url>",
                                "user_type":"0", 
                                "professional_profile":{
                                    "department":"<department-id>",
                                    "specialities":
                                    [
                                        "speciality-1",
                                        "speciality-2"
                                    ],
                                    "philosophy":"<p-description>",
                                    "bio":"<bio-description>",
                                    "education":"<edu-description>"
                                },
                                "latest_post":{
                                    "post_id":"<post-id>",
                                    "thumb":"<thumb>",
                                    "type":"0",
                                    "title":"<title>"
                                }
                            },
                            {
                                "user_id":"<user-id>",
                                "first_name":"<first-name>",
                                "last_name":"<last-name>",
                                "city":"<city>",
                                "state":"<state>",
                                "zip_code":"<zip-code>",
                                "thumb":"<user-image-thumb-url>",
                                "user_type":"0", 
                                "professional_profile":{
                                    "department":"<department-id>",
                                    "specialities":
                                    [
                                        "speciality-1",
                                        "speciality-2"
                                    ],
                                    "philosophy":"<p-description>",
                                    "bio":"<bio-description>",
                                    "education":"<edu-description>"
                                },
                                "latest_post":{
                                    "post_id":"<post-id>",
                                    "thumb":"<thumb>",
                                    "type":"0",
                                    "title":"<title>"
                                }
                            }
                        ]
                    }
                ]
            }
            
## Get Feed [/fitchirp/feed/get?{user_id}&{timestamp}&{_fcud}]
### Get Feed [GET]

This API is used to fetch the feed for the home screen of the app. The request if 
supplied with a timestamp returns all the posts older than the supplied timestamp
and if the timestamp is sent as 0, the request returns the top 50 cached feed of the 
user. 

access_level - 0 = draft/non-public, 1 = public in feed, 2 - private to chat


+ Response 200 (application/json)

    + Headers
    
            
        
    + Body
            
            {
              "status": 200,
              "message": "success",
              "result": [
                {
                  "posts": [
                    {
                      "id": "<post-id>",
                      "timestamp": "<timestamp>",
                      "access_level":"0",
                      "user": {
                        "user_id": "<user_id>",
                        "first_name": "<first-name>",
                        "last_name": "<last-name>",
                        "thumb": "<thumb-user-image>",
                        "city": "<city>",
                        "state": "<state>",
                        "zipcode": "<zipcode>",
                        "user_type": "0"
                      },
                      "content": {
                        "image": "<image-url>",
                        "thumb": "<thumb>",
                        "data": "<video-player-url>",
                        "web_url":"<web-link-content>",
                        "title": "<title>",
                        "description": "<description>", 
                        "category_id":1,
                      },
                      "activity": {
                        "likes": 12,
                        "comments": 23,
                        "views": 300,
                        "is_liked":false,
                        "is_commented":false,
                        "is_shared":false,
                        "commments_posted": [
                          {
                            "id": "1",
                            "text": "<comment-text>",
                            "timestmap": "<timestamp>",
                            "user": {
                              "user_id": "<user_id>",
                              "first_name": "<first-name>",
                              "thumb":"<thumb-image>",
                              "last_name": "<last-name>"
                            }
                          },
                          {
                            "id": "2",
                            "text": "<comment-text>",
                            "timestmap": "<timestamp>",
                            "user": {
                              "user_id": "<user_id>",
                              "first_name": "<first-name>",
                              "last_name": "<last-name>",
                              "thumb":"<thumb-image>"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }

## Report Post [/fitchirp/feed/report]
### Report a Post [POST]

This API is used to report abuse a post made by other users.

+ Request (application/json)

    + Headers
    
            Set-Cookie: _fcud = "<unique-authentication-key>"
            
    + Body

            {
                "user_id":"<user-id>",
                "post_id":"<post-id>",
                "reason":"<reason-of-reporting-abuse>"
            }

+ Response 200 (application/json)

    + Headers
    
            
        
    + Body
    
            {
                "status":200,
                "message":"success"
            }

## Subscribe [/fitchirp/feed/subscribe]
### Subscribe to a Post [POST]

This API is used to subscribe to a post which means turning on the notifications
related to the activities on the post.

+ Request (application/json)

    + Headers
    
            Cookie: _fcud = "<unique-authentication-key>"
            
    + Body

            {
                "user_id":"<user-id>",
                "post_id":"<post-id>"
            }

+ Response 200 (application/json)

    + Headers
    
            
        
    + Body
    
            {
                "status":200,
                "message":"success"
            }
            

## Delete My Post [/fitchirp/feed/delete]
### Delete a Post [POST]

This API is used to delete a post created by user.

+ Request (application/json)

    + Headers
    
            Cookie: _fcud = "<unique-authentication-key>"
            
    + Body

            {
                "user_id":"<user-id>",
                "post_id":"<post-id>"
            }

+ Response 200 (application/json)

    + Body
    
            {
                "status":200,
                "message":"post deleted"
            }

## Save a Post [/fitchirp/user/posts/saved/create]
### Save a Post [POST]

This API is used to save a post created by another user.

+ Request (application/json)

    + Headers
    
            Cookie: _fcud = "<unique-authentication-key>"
            
    + Body

            {
                "user_id":"<user-id>",
                "post_id":"<post-id>"
            }

+ Response 200 (application/json)

    + Body
    
            {
                "status":200,
                "message":"post saved for you"
            }

## Remove Saved Post [/fitchirp/user/posts/saved/delete]
### Remove Saved Post [POST]

This API is used to remove a post saved by the user in his profile.

+ Request (application/json)

    + Headers
    
            Cookie: _fcud = "<unique-authentication-key>"
            
    + Body

            {
                "user_id":"<user-id>",
                "post_id":"<post-id>"
            }

+ Response 200 (application/json)

    + Body
    
            {
                "status":200,
                "message":"post removed from your saved ones"
            }

## Like a Post [/fitchirp/feed/like]
### Like a Post [POST]

This API is used to like a post.

+ Request (application/json)

    + Headers
    
            Cookie: _fcud = "<unique-authentication-key>"
            
    + Body

            {
                "user_id":"<user-id>",
                "post_id":"<post-id>"
            }

+ Response 200 (application/json)

    + Headers
    
            
        
    + Body
    
            {
                "status":200,
                "message":"success",
                "likes":"<likes-count>",
                "comment":"<comment-count>",
                "views":"<view-count>"
            }

## Mark Viewed a Post [/fitchirp/feed/view]
### View a Post [POST]

This API is used to mark a post as viewed.

+ Request (application/json)

    + Headers
    
            Cookie: _fcud = "<unique-authentication-key>"
            
    + Body

            {
                "user_id":"<user-id>",
                "post_id":"<post-id>"
            }

+ Response 200 (application/json)

    + Headers
    
            
        
    + Body
    
            {
                "status":200,
                "message":"success",
                "likes":"<likes-count>",
                "comment":"<comment-count>",
                "views":"<view-count>"
            }
            

## Comment on a Post [/fitchirp/feed/comments/create]
### Comment on a Post [POST]

This API is used to post a comment on a post.

+ Request (application/json)

    + Headers
    
            Cookie: _fcud = "<unique-authentication-key>"
            
    + Body

            {
                "user_id":"<user-id>",
                "post_id":"<post-id>", 
                "comment":"<comment-text>"
            }

+ Response 200 (application/json)

    
    + Body
    
            {
              "status": 200,
              "message": "success",
              "likes": "<likes-count>",
              "comments": "<comment-count>",
              "views": "<view-count>",
              "comments_posted": [
                {
                  "id": "1",
                  "text": "<comment-text>",
                  "timestmap": "<timestamp>",
                  "user": {
                    "user_id": "<user_id>",
                    "thumb":"<thumb-image>",
                    "first_name": "<first-name>",
                    "last_name": "<last-name>"
                  }
                }
              ]
            }
            

## Delete Comment on a Post [/fitchirp/feed/comment/delete]
### Delete Comment on a Post [POST]

This API is used to post a comment on a post.

+ Request (application/json)

    + Headers
    
            Cookie: _fcud = "<unique-authentication-key>"
            
    + Body

            {
                "user_id":"<user-id>",
                "post_id":"<post-id>",
                "comment_id":"<comment-id>"
            }

+ Response 200 (application/json)

    
    + Body
    
            {
              "status": 200,
              "message": "success"
            }

## Get Comments [/fitchirp/feed/comments/get?{user_id}&{post_id}&{_fcud}&{timestamp}]
### Get Comments on Post [GET]

This API is used to get comments on a post.

+ Response 200 (application/json)

    
    + Body
    
            {
              "status": 200,
              "message": "success",
              "result": [
                {
                  "count": 100,
                  "commments_posted": [
                    {
                      "id": "1",
                      "text": "<comment-text>",
                      "timestmap": "<timestamp>",
                      "user": {
                        "user_id": "<user_id>",
                        "first_name": "<first-name>",
                        "last_name": "<last-name>",
                        "thumb":"<thumb-image>"
                      }
                    },
                    {
                      "id": "2",
                      "text": "<comment-text>",
                      "timestmap": "<timestamp>",
                      "user": {
                        "user_id": "<user_id>",
                        "first_name": "<first-name>",
                        "last_name": "<last-name>",
                        "thumb":"<thumb-image>"
                      }
                    }
                  ]
                }
              ]
            }
            

## Get Comments Replies [/fitchirp/feed/comments/replies/get?{user_id}&{post_id}&{comment_id}&{_fcud}&{timestamp}]
### Get Replies on a Comment [GET]

This API is used to get replies on a comment on a post.

+ Response 200 (application/json)

    
    + Body
    
            {
              "status": 200,
              "message": "success",
              "result": [
                {
                  "count": 100,
                  "replies_posted": [
                    {
                      "id": "1",
                      "text": "<comment-text>",
                      "timestmap": "<timestamp>",
                      "user": {
                        "user_id": "<user_id>",
                        "first_name": "<first-name>",
                        "last_name": "<last-name>",
                        "thumb":"<thumb-image>"
                      }
                    },
                    {
                      "id": "2",
                      "text": "<comment-text>",
                      "timestmap": "<timestamp>",
                      "user": {
                        "user_id": "<user_id>",
                        "first_name": "<first-name>",
                        "last_name": "<last-name>",
                        "thumb":"<thumb-image>"
                      }
                    }
                  ]
                }
              ]
            }
            

## Delete Reply on a Comment [/fitchirp/feed/comments/replies/delete]
### Delete Reply on a Comment [POST]

This API is used to post a comment on a post.

+ Request (application/json)

    + Headers
    
            Cookie: _fcud = "<unique-authentication-key>"
            
    + Body

            {
                "user_id":"<user-id>",
                "post_id":"<post-id>",
                "reply_id":"<reply-id>"
            }

+ Response 200 (application/json)

    
    + Body
    
            {
              "status": 200,
              "message": "success"
            }
            

## Get Unread Count [/fitchirp/feed/unread/get?{user_id}&{_fcud}&{feed_timestamp}&{notification_timestamp}]
### Get Unread Posts and notifications [GET]

This API is used to get unread feeds and notifications for a user.

+ Response 200 (application/json)

    
    + Body
    
            {
              "status": 200,
              "message": "success",
              "result": [
                {
                    "unread_feed": 5,
                    "unread_notifications": 0
                }
              ]
            }
            
## Get User Profile [/fitchirp/user/profile/get?{user_id}&{_fcud}]
### Get User Profile [GET]

This API is used to get a user's profile.

+ Response 200 (application/json)

    
    + Body
    
            {
              "status": 200,
              "message": "success",
              "result": [
                {
                    "user_id":"<user-id>",
                "first_name":"<first-name>",
                "last_name":"<last-name>",
                "email":"<email>",
                "phone":"<phone>",
                "social_id":"<social-id>",
                "login_type":"<0-email, 1-facebook>",
                "city":"<city>",
                "state":"<state>",
                "zip_code":"<zip-code>",
                "posts":123,
                "followers":23,
                "following":34,
                "is_following":false,
                "image":"<user-image-url>",
                "thumb":"<user-image-thumb-url>",
                "referral_code":"<optional-referral-code>"
                "user_type":"0", #0 - individual, 1 - professional
                "basic_profile":{
                    "interests":["<interest-id>", "<interest-id>"],
                    "other_speciality":"<other-speciality>"
                },
                "professional_profile":{
                    "department":"<department-id>",
                    "speciality":
                    [
                        {
                            "id":"<id>",
                            "description":"<description>",
                        },
                        {
                            "id":"<id>",
                            "description":"<description>",
                        }
                    ],
                    "philosophy":"<p-description>",
                    "bio":"<bio-description>",
                    "education":"<edu-description>"
                }
                }
              ]
            }
            
## Get Posts of User [/fitchirp/user/posts/get?{user_id}&{timestamp}&{_fcud}]
### Get Posts of User [GET]

This API is used to get the posts of a user. The timestamp when sent 0 returns 
the latest 10 posts of a user and when sent correctly, returns the posts older than
the supplied timestamp.


+ Response 200 (application/json)

    + Headers
    
            
        
    + Body
            
            {
              "status": 200,
              "message": "success",
              "result": [
                {
                  "posts": [
                    {
                      "id": "<post-id>",
                      "timestamp": "<timestamp>",
                      "access_level":"1",
                      "user": {
                        "user_id": "<user_id>",
                        "first_name": "<first-name>",
                        "last_name": "<last-name>",
                        "thumb": "<thumb-user-image>"
                      },
                      "content": {
                        "image": "<image-url>",
                        "thumb": "<thumb>",
                        "type":"video",
                        "data": "<video-player-url>",
                        "web_url":"<web-link-content>",
                        "title": "<title>",
                        "description": "<description>",
                        "category_id":1
                      },
                      "activity": null,
                    }
                  ]
                }
              ]
            }
            
## Get Saved Posts of User [/fitchirp/user/posts/saved/get?{user_id}&{timestamp}&{_fcud}]
### Get Saved Posts of User [GET]

This API is used to get the saved posts of a user. The timestamp when sent 0 returns 
the latest 10 posts of a user and when sent correctly, returns the posts older than
the supplied timestamp.


+ Response 200 (application/json)

    + Headers
    
            
        
    + Body
            
            {
              "status": 200,
              "message": "success",
              "result": [
                {
                  "posts": [
                    {
                      "id": "<post-id>",
                      "timestamp": "<timestamp>",
                      "access_level":"1",
                      "user": {
                        "user_id": "<user_id>",
                        "first_name": "<first-name>",
                        "last_name": "<last-name>",
                        "thumb": "<thumb-user-image>"
                      },
                      "content": {
                        "image": "<image-url>",
                        "thumb": "<thumb>",
                        "type":"video",
                        "data": "<video-player-url>",
                        "web_url":"<web-link-content>",
                        "title": "<title>",
                        "description": "<description>",
                        "category_id":1
                      },
                      "activity": null,
                    }
                  ]
                }
              ]
            }
            
## Search [/fitchirp/user/search?{user_id}&{page_no}&{keyword}&{interest_id_1|interest_id_2}]
### Search User by name, email, zip [GET]

This API is used to search users via their name, email or zipcode with a keyword 
and a interest. Multiple interest IDs can be used to filter the data.


+ Response 200 (application/json)de

    + Headers
    
            
        
    + Body
    
            {
                "status":200,
                "message":"success"
                "result":[
                    {
                        "count":<total-count>,
                        "page_no":1,
                        "page_size":50,
                        "users":[
                            {
                                "user_id":"<user-id>",
                                "first_name":"<first-name>",
                                "last_name":"<last-name>",
                                "social_id":"<social-id>",
                                "login_type":"<0-email, 1-facebook>",
                                "city":"<city>",
                                "state":"<state>",
                                "zip_code":"<zip-code>",
                                "image":"<user-image-url>",
                                "thumb":"<user-image-thumb-url>",
                                "following":false,
                                "follower":false,
                                "user_type":"0", 
                                "professional_profile":{
                                    "department":"<department-id>",
                                    "specialities":
                                    [
                                        "speciality-1",
                                        "speciality-2"
                                    ],
                                    "philosophy":"<p-description>",
                                    "bio":"<bio-description>",
                                    "education":"<edu-description>"
                                }
                            },
                            {
                                "user_id":"<user-id>",
                                "first_name":"<first-name>",
                                "last_name":"<last-name>",
                                "social_id":"<social-id>",
                                "login_type":"<0-email, 1-facebook>",
                                "city":"<city>",
                                "state":"<state>",
                                "zip_code":"<zip-code>",
                                "image":"<user-image-url>",
                                "thumb":"<user-image-thumb-url>",
                                "following":false,
                                "follower":false,
                                "user_type":"0", 
                                "professional_profile":{
                                    "department":"<department-id>",
                                    "specialities":
                                    [
                                        "speciality-1",
                                        "speciality-2"
                                    ],
                                    "philosophy":"<p-description>",
                                    "bio":"<bio-description>",
                                    "education":"<edu-description>"
                                }
                            }
                        ]
                    }
                ]
            }
            

## Create Post [/fitchirp/feed/create]
### Create new Post [POST]

This API is used to create new post. The user can also save the post as draft 
and later resume it to share it to public feeds.

+ Request (application/json)

    + Headers
    
            Cookie: _fcud = "<unique-authentication-key>"
            
    + Body

            {
                "user_id":"<user-id>",
                "content": "<content-mulipart>",
                "title": "<title>",
                "description": "<description>",
                "save_post_later":false,
                "category_id":0,
                "tagged_users":["<user-id-1>", "<user-id-2>", "<user-id-3>"]
            }

+ Response 200 (application/json)

    
    + Body
    
            {
              "status": 200,
              "message": "success",
              "result": [
                {
                  "posts": [
                    {
                      "id": "<post-id>",
                      "timestamp": "<timestamp>",
                      "access_level":"0",
                      "user": {
                        "user_id": "<user_id>",
                        "first_name": "<first-name>",
                        "last_name": "<last-name>",
                        "thumb": "<thumb-user-image>"
                      },
                      "content": {
                        "image": "<image-url>",
                        "thumb": "<thumb>",
                        "type":"video",
                        "data": "<video-player-url>",
                        "web_url":"<web-link-content>",
                        "title": "<title>",
                        "description": "<description>",
                        "category_id":1
                      },
                      "activity": null,
                    }
                  ]
                }
              ]
            }
            
## Friends - Following/Followers [/fitchirp/user/friends/get?{user_id}&{page_no}&{friends_type}]
### Get All Friends [GET]

This API is used to fetch the friends of the  user,
the ones he is following or being followed by or both.

friends_type can be following, follower or both


+ Response 200 (application/json)

    + Headers
    
            
        
    + Body
    
            {
                "status":200,
                "message":"success"
                "result":[
                    {
                        "count":<total-count>,
                        "page_no":1,
                        "page_size":50,
                        "users":[
                            {
                                "user_id":"<user-id>",
                                "first_name":"<first-name>",
                                "last_name":"<last-name>",
                                "city":"<city>",
                                "state":"<state>",
                                "zip_code":"<zip-code>",
                                "image":"<user-image-url>",
                                "thumb":"<user-image-thumb-url>",
                                "following":false,
                                "follower":false,
                                "user_type":"0", 
                                "basic_profile":null,
                                "professional_profile":null
                            },
                            {
                                "user_id":"<user-id>",
                                "first_name":"<first-name>",
                                "last_name":"<last-name>",
                                "city":"<city>",
                                "state":"<state>",
                                "zip_code":"<zip-code>",
                                "image":"<user-image-url>",
                                "thumb":"<user-image-thumb-url>",
                                "following":false,
                                "follower":false,
                                "user_type":"0",
                                "basic_profile":null,
                                "professional_profile":null
                            }
                        ]
                    }
                ]
            }
            
## Mark Notifications Read [/fitchirp/user/notifications/update]
### Mark Notifications Read [POST]

This API is used to mark notifications which user has read.

+ Request (application/json)

    + Headers
    
            Cookie: _fcud = "<unique-authentication-key>"
            
    + Body

            {
                "user_id":"<user-id>",
                "timestamp":"<latest-notification-timestamp>"
            }

+ Response 200 (application/json)

    
    + Body
    
            {
              "status": 200,
              "message": "success"
            }

## Notifications [/fitchirp/user/notifications/get?{user_id}&{timestamp}]
### Get All Notifications [GET]

This API is used to fetch all the notifications of the user. Sending 0 as timestamp
fetches the latest notifications and sending a timestamp fetches all the notifications
older than the timestamp supplied.

Notification types 

follower : When a user starts following you, 
following : when you start following a user,
post_created : when a user you are following creates a new post,
post_liked : when a user likes your post,
post_commented : when a user comments on your post or replies to your comment, 
friend_joined : when your fb friend joins the system, 
tagged : when you are tagged in a post.

The notification becomes read, as soon as the timestamp of the latest notification is sent
to server when user leaves the notification screen. 


+ Response 200 (application/json)

    + Headers
    
            
        
    + Body
    
            {
                "status":200,
                "message":"success"
                "result":[
                    {
                        "notifications":[
                            {
                                "id":"<notification-id>",
                                "type":"post_liked",
                                "timestamp":"<timestamp>",
                                "is_read":"false",
                                "user":{
                                    "user_id":"<user-id>",
                                    "first_name":"<first_name>",
                                    "last_name":"<last-name>",
                                    "user_type":0
                                },
                                "content":{
                                    "post_id":"<post_id>",
                                    "thumb":"<thumb-of-content>"
                                }
                            },
                            {
                                "id":"<notification-id>",
                                "type":"friend_joined",
                                "timestamp":"<timestamp>",
                                "is_read":"false",
                                "user":{
                                    "user_id":"<user-id>",
                                    "first_name":"<first_name>",
                                    "last_name":"<last-name>",
                                    "user_type":0
                                },
                                "content":null,
                            }
                        ]
                    }
                ]
            }
            

## Settings [/fitchirp/user/settings]
### Account Settings [POST]

This API is used to mark notifications which user has read.

+ Request (application/json)

    + Headers
    
            Cookie: _fcud = "<unique-authentication-key>"
            
    + Body

            {
                "user_id":"<user-id>",
                "notification":{
                    "likes_tags":0,
                    "comments":1,
                    "follower_request":2
                },
                "privacy":{
                    "protect_my_posts":true,
                    "tagging":{
                        "anyone":true,
                        "followers":false
                    },
                    "search":{
                        "via_email":true,
                        "via_zipcode":false,
                    },
                    "messaging":{
                        "anyone":true,
                        "followers":false,
                        "no_one":false
                    }
                }
            }

+ Response 200 (application/json)

    
    + Body
    
            {
              "status": 200,
              "message": "success"
            }